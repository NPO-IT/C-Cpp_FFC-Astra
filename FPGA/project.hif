HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	del.vhd
	{
		del [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			111 [] [];
		}
	}
	con5.vhd
	{
		con5 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			109 [] [];
		}
	}
	mux6.tdf
	{
		mux6 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			107 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [sel,data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,result0,result1,result2,result3,result4,result5];
		}
	}
	comp.tdf
	{
		comp [USE_LPM_FOR_AHDL_OPERATORS] [lpm_compare.inc]
		{
			110 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [ageb,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5];
			106 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [dataa0,dataa1,dataa2,dataa3,dataa4,dataa5];
		}
	}
	counter123.vhd
	{
		counter123 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			84 [] [];
		}
	}
	muxx.tdf
	{
		muxx [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc];
	}
	compar9.tdf
	{
		compar9 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_compare.inc];
	}
	counter16.vhd
	{
		counter16 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			66 [] [];
		}
	}
	compare18.vhd
	{
		compare18 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			83 [] [];
		}
	}
	count1.vhd
	{
		count1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS];
	}
	compare6.vhd
	{
		compare6 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS];
	}
	counter6.vhd
	{
		counter6 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			69 [] [];
		}
	}
	compare5.vhd
	{
		compare5 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			68 [] [];
		}
	}
	compare4.vhd
	{
		compare4 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS];
	}
	compare3.vhd
	{
		compare3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			55 [] [];
		}
	}
	counter4.vhd
	{
		counter4 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			79 [] [];
		}
	}
	lpm_shiftreg.tdf
	{
		lpm_shiftreg [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DIRECTION=LEFT,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY] [aglobal.inc,dffeea.inc,lpm_constant.inc]
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_DIRECTION=LEFT,LPM_AVALUE=255,LPM_SVALUE=254,DEVICE_FAMILY=FLEX10K] [q0,q1,q2,q3,q4,q5,q6,q7,load,data0,data1,data2,data3,data4,data5,data6,data7,clock,sset,shiftin];
			36 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_DIRECTION=LEFT,LPM_AVALUE=255,LPM_SVALUE=254,DEVICE_FAMILY=FLEX10K] [shiftin,sset,clock,data7,data6,data5,data4,data3,data2,data1,data0,load,q7,q6,q5,q4,q3,q2,q1,q0,aset];
		}
	}
	lpm_constant.tdf
	{
		lpm_constant [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_CVALUE] []
		{
			41 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_CVALUE=44] [];
			40 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_CVALUE=44] [result5,result4,result3,result2,result1,result0];
			81 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_CVALUE=41] [];
			73 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_CVALUE=0] [];
			85 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_CVALUE=39] [result5,result4,result3,result2,result1,result0];
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_CVALUE=254] [result0,result1,result2,result3,result4,result5,result6,result7];
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_CVALUE=255] [result0,result1,result2,result3,result4,result5,result6,result7];
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_CVALUE=39] [];
			116 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_CVALUE=4] [];
			122 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=3,LPM_CVALUE=4] [];
			64 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_CVALUE=99] [];
			87 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_CVALUE=49] [];
		}
	}
	lpm_compare.tdf
	{
		lpm_compare [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=NO,CARRY_CHAIN=MANUAL,CASCADE_CHAIN=MANUAL,CARRY_CHAIN_LENGTH=8,CASCADE_CHAIN_LENGTH=8,DEVICE_FAMILY=FLEX8000] [aglobal.inc,altshift.inc,comptree.inc]
		{
			67 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [AlB,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5];
			44 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [AgeB,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5];
			56 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0,AeB];
			124 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=7,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab6,datab5,datab4,datab3,datab2,datab1,datab0,AeB];
			90 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,LPM_REPRESENTATION=UNSIGNED,LPM_PIPELINE=0,CHAIN_SIZE=8,ONE_INPUT_IS_CONSTANT=YES,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [dataa2,dataa1,dataa0,datab2,datab1,datab0,AeB];
		}
	}
	comptree.tdf
	{
		comptree [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [lpm_constant.inc,cmpchain.inc,comptree.inc]
		{
			53 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [agb,dataa1,dataa0,datab1,datab0];
			50 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=0,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=1] [agb,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			47 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			45 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			33 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,dataa0,dataa1,aeb];
			57 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
			59 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
			125 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=7,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,aeb];
			127 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=7,CHAIN_LENGTH=1,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=1,BURRIED_CLOCKED=0,MODE=0] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,aeb];
			91 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,CHAIN_LENGTH=8,ONE_INPUT_CONSTANT=1,OUTPUTS_CLOCKED=0,BURRIED_CLOCKED=1,MODE=0] [datab0,datab1,datab2,dataa0,dataa1,dataa2,aeb];
		}
	}
	cmpchain.tdf
	{
		cmpchain [USE_LPM_FOR_AHDL_OPERATORS,lpm_width,ONE_INPUT_CONSTANT,MODE,CARRY_CHAIN,CASCADE_CHAIN,CARRY_CHAIN_LENGTH,CASCADE_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,comptree.inc]
		{
			52 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=1,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [aeb,agb,dataa0,datab0];
			51 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=0,MODE=1,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [agb,dataa1,dataa0,datab1,datab0];
			49 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [agb,dataa1,dataa0,datab1,datab0];
			48 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [aeb,agb,dataa1,dataa0,datab1,datab0];
			46 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [agb,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab5,datab4,datab3,datab2,datab1,datab0];
			35 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=4,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,dataa0,dataa1,dataa2,dataa3,aeb];
			34 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=2,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,dataa0,dataa1,aeb];
			58 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=6,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,aeb];
			126 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=7,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,aeb];
			32 [USE_LPM_FOR_AHDL_OPERATORS=OFF,lpm_width=3,ONE_INPUT_CONSTANT=1,MODE=0,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,CASCADE_CHAIN_LENGTH=2,DEVICE_FAMILY=FLEX10K] [datab0,datab1,datab2,dataa0,dataa1,dataa2,aeb];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,DEPTH=0] [data0,data1,data2,data3,data4,data5,result0,result1,result2,result3,result4,result5];
			22 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=64,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,data16,data17,data18,data19,data20,data21,data22,data23,data24,data25,data26,data27,data28,data29,data30,data31,data32,data33,data34,data35,data36,data37,data38,data39,data40,data41,data42,data43,data44,data45,data46,data47,data48,data49,data50,data51,data52,data53,data54,data55,data56,data57,data58,data59,data60,data61,data62,data63,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15,result16,result17,result18,result19,result20,result21,result22,result23,result24,result25,result26,result27,result28,result29,result30,result31,result32,result33,result34,result35,result36,result37,result38,result39,result40,result41,result42,result43,result44,result45,result46,result47,result48,result49,result50,result51,result52,result53,result54,result55,result56,result57,result58,result59,result60,result61,result62,result63];
			121 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=3,DEPTH=0] [data0,data1,data2,result0,result1,result2];
			63 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,result0,result1,result2,result3,result4,result5,result6];
		}
	}
	lpm_counter.tdf
	{
		lpm_counter [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DIRECTION=DEFAULT,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=OFF,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aglobal.inc,dffeea.inc,lpm_counter.inc,lpm_compare.inc,cmpconst.inc,lpm_add_sub.inc,lpm_decode.inc,lpm_constant.inc]
		{
			112 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=UP,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,clock];
			105 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=44,LPM_AVALUE=44,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q5,q4,q3,q2,q1,q0,clock,aset,sset];
			104 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=44,LPM_AVALUE=44,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aset,sset,q0,q1,q2,q3,q4,q5,clock];
			103 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=38,LPM_AVALUE=39,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q5,q4,q3,q2,q1,q0,clock,aset,sset];
			102 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=38,LPM_AVALUE=39,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aset,sset,q0,q1,q2,q3,q4,q5,clock];
			101 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=39,LPM_AVALUE=39,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q5,q4,q3,q2,q1,q0,clock,aset,sset];
			100 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=39,LPM_AVALUE=39,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aset,sset,q0,q1,q2,q3,q4,q5,clock];
			99 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=39,LPM_AVALUE=44,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q5,q4,q3,q2,q1,q0,clock,aset,sset];
			98 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=39,LPM_AVALUE=44,LPM_MODULUS=45,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aset,sset,q0,q1,q2,q3,q4,q5,clock];
			97 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=39,LPM_AVALUE=39,LPM_MODULUS=40,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q5,q4,q3,q2,q1,q0,clock,aset,sset];
			96 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=39,LPM_AVALUE=39,LPM_MODULUS=40,LPM_DIRECTION=UP,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [aset,sset,q0,q1,q2,q3,q4,q5,clock];
			39 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=45,LPM_AVALUE=44,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=OFF,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [q5,q4,q3,q2,q1,q0,clock,aset];
			38 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=45,LPM_AVALUE=44,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aset,q0,q1,q2,q3,q4,q5,clock];
			80 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=42,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [q0,q1,q2,q3,q4,q5,clock,aclr];
			70 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_DIRECTION=UP,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [q0,clock,aclr,clk_en];
			31 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=40,LPM_AVALUE=39,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=OFF,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [q5,q4,q3,q2,q1,q0,clock,aset];
			30 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=40,LPM_AVALUE=39,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aset,q0,q1,q2,q3,q4,q5,clock];
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=40,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [clock,clk_en,q5,q4,q3,q2,q1,q0];
			37 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DIRECTION=UP,LPM_MODULUS=40,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [clock,clk_en,aclr,q5,q4,q3,q2,q1,q0];
			75 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_DIRECTION=UP,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aclr,clock,cout,q7,q6,q5,q4,q3,q2,q1,q0];
			113 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_DIRECTION=UP,LPM_MODULUS=5,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [clock,cout,q0];
			118 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=3,LPM_DIRECTION=UP,LPM_MODULUS=5,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [clock,cout,q2,q1,q0];
			60 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_DIRECTION=UP,LPM_MODULUS=100,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aclr,clock,q6,q5,q4,q3,q2,q1,q0,cnt_en];
			86 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_DIRECTION=UP,LPM_MODULUS=50,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aclr,clock,q6,q5,q4,q3,q2,q1,q0,cnt_en];
		}
	}
	lpm_ram_dp.tdf
	{
		lpm_ram_dp [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_RDADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altdpram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_WIDTHAD=6,LPM_NUMWORDS=64,LPM_INDATA=REGISTERED,LPM_RDADDRESS_CONTROL=UNREGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY=FLEX10K] [wren,wrclock,rdaddress5,rdaddress4,rdaddress3,rdaddress2,rdaddress1,rdaddress0,data5,data4,data3,data2,data1,data0,wraddress5,wraddress4,wraddress3,wraddress2,wraddress1,wraddress0,q5,q4,q3,q2,q1,q0];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			71 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [result0,cout,dataa0,datab0];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,result0,result1,result2,result3,result4,result5];
			114 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [datab0,dataa0,result0];
			119 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=3,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [datab0,datab1,datab2,dataa0,dataa1,dataa2,result0,result1,result2];
			61 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			72 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=1,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [result0,cout,dataa0,datab0,cin];
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=6,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,result0,result1,result2,result3,result4,result5];
			115 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=1,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,dataa0,result0];
			120 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=3,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,dataa0,dataa1,dataa2,result0,result1,result2];
			62 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
		}
	}
	cmpconst.tdf
	{
		cmpconst [USE_LPM_FOR_AHDL_OPERATORS,WIDTH,CVALUE] []
		{
			42 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,CVALUE=44] [result,data5,data4,data3,data2,data1,data0];
			82 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,CVALUE=41] [result,data5,data4,data3,data2,data1,data0];
			10 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,CVALUE=39] [data0,data1,data2,data3,data4,data5,result];
			117 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,CVALUE=4] [data0,result];
			123 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=3,CVALUE=4] [data0,data1,data2,result];
			65 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,CVALUE=99] [data0,data1,data2,data3,data4,data5,data6,result];
			88 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,CVALUE=49] [data0,data1,data2,data3,data4,data5,data6,result];
		}
	}
	altdpram.tdf
	{
		altdpram [USE_LPM_FOR_AHDL_OPERATORS,WIDTH,WIDTHAD,NUMWORDS,FILE=NO_FILE,LPM_FILE=NO_FILE,INDATA_REG=INCLOCK,INDATA_ACLR=ON,WRADDRESS_REG=INCLOCK,WRADDRESS_ACLR=ON,WRCONTROL_REG=INCLOCK,WRCONTROL_ACLR=ON,RDADDRESS_REG=OUTCLOCK,RDADDRESS_ACLR=ON,RDCONTROL_REG=OUTCLOCK,RDCONTROL_ACLR=ON,OUTDATA_REG=UNREGISTERED,OUTDATA_ACLR=ON,USE_EAB=ON,DEVICE_FAMILY] [aglobal.inc,a_hdffe.inc,lpm_mux.inc,lpm_decode.inc,memmodes.inc]
		{
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,WIDTHAD=6,NUMWORDS=64,FILE=NO_FILE,LPM_FILE=NO_FILE,INDATA_REG=INCLOCK,INDATA_ACLR=ON,WRADDRESS_REG=INCLOCK,WRADDRESS_ACLR=ON,WRCONTROL_REG=INCLOCK,WRCONTROL_ACLR=ON,RDADDRESS_REG=UNREGISTERED,RDADDRESS_ACLR=ON,RDCONTROL_REG=UNREGISTERED,RDCONTROL_ACLR=ON,OUTDATA_REG=UNREGISTERED,OUTDATA_ACLR=ON,USE_EAB=ON,DEVICE_FAMILY=FLEX10K] [rdaddress0,rdaddress1,rdaddress2,rdaddress3,rdaddress4,rdaddress5,inclock,wraddress0,wraddress1,wraddress2,wraddress3,wraddress4,wraddress5,data0,data1,data2,data3,data4,data5,wren,q0,q1,q2,q3,q4,q5];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			108 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=6,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result5,result4,result3,result2,result1,result0,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
			13 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_SIZE=64,LPM_WIDTHS=6,LPM_PIPELINE=0] [sel0,sel1,sel2,sel3,sel4,sel5,data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data2_0,data2_1,data2_2,data2_3,data2_4,data2_5,data3_0,data3_1,data3_2,data3_3,data3_4,data3_5,data4_0,data4_1,data4_2,data4_3,data4_4,data4_5,data5_0,data5_1,data5_2,data5_3,data5_4,data5_5,data6_0,data6_1,data6_2,data6_3,data6_4,data6_5,data7_0,data7_1,data7_2,data7_3,data7_4,data7_5,data8_0,data8_1,data8_2,data8_3,data8_4,data8_5,data9_0,data9_1,data9_2,data9_3,data9_4,data9_5,data10_0,data10_1,data10_2,data10_3,data10_4,data10_5,data11_0,data11_1,data11_2,data11_3,data11_4,data11_5,data12_0,data12_1,data12_2,data12_3,data12_4,data12_5,data13_0,data13_1,data13_2,data13_3,data13_4,data13_5,data14_0,data14_1,data14_2,data14_3,data14_4,data14_5,data15_0,data15_1,data15_2,data15_3,data15_4,data15_5,data16_0,data16_1,data16_2,data16_3,data16_4,data16_5,data17_0,data17_1,data17_2,data17_3,data17_4,data17_5,data18_0,data18_1,data18_2,data18_3,data18_4,data18_5,data19_0,data19_1,data19_2,data19_3,data19_4,data19_5,data20_0,data20_1,data20_2,data20_3,data20_4,data20_5,data21_0,data21_1,data21_2,data21_3,data21_4,data21_5,data22_0,data22_1,data22_2,data22_3,data22_4,data22_5,data23_0,data23_1,data23_2,data23_3,data23_4,data23_5,data24_0,data24_1,data24_2,data24_3,data24_4,data24_5,data25_0,data25_1,data25_2,data25_3,data25_4,data25_5,data26_0,data26_1,data26_2,data26_3,data26_4,data26_5,data27_0,data27_1,data27_2,data27_3,data27_4,data27_5,data28_0,data28_1,data28_2,data28_3,data28_4,data28_5,data29_0,data29_1,data29_2,data29_3,data29_4,data29_5,data30_0,data30_1,data30_2,data30_3,data30_4,data30_5,data31_0,data31_1,data31_2,data31_3,data31_4,data31_5,data32_0,data32_1,data32_2,data32_3,data32_4,data32_5,data33_0,data33_1,data33_2,data33_3,data33_4,data33_5,data34_0,data34_1,data34_2,data34_3,data34_4,data34_5,data35_0,data35_1,data35_2,data35_3,data35_4,data35_5,data36_0,data36_1,data36_2,data36_3,data36_4,data36_5,data37_0,data37_1,data37_2,data37_3,data37_4,data37_5,data38_0,data38_1,data38_2,data38_3,data38_4,data38_5,data39_0,data39_1,data39_2,data39_3,data39_4,data39_5,data40_0,data40_1,data40_2,data40_3,data40_4,data40_5,data41_0,data41_1,data41_2,data41_3,data41_4,data41_5,data42_0,data42_1,data42_2,data42_3,data42_4,data42_5,data43_0,data43_1,data43_2,data43_3,data43_4,data43_5,data44_0,data44_1,data44_2,data44_3,data44_4,data44_5,data45_0,data45_1,data45_2,data45_3,data45_4,data45_5,data46_0,data46_1,data46_2,data46_3,data46_4,data46_5,data47_0,data47_1,data47_2,data47_3,data47_4,data47_5,data48_0,data48_1,data48_2,data48_3,data48_4,data48_5,data49_0,data49_1,data49_2,data49_3,data49_4,data49_5,data50_0,data50_1,data50_2,data50_3,data50_4,data50_5,data51_0,data51_1,data51_2,data51_3,data51_4,data51_5,data52_0,data52_1,data52_2,data52_3,data52_4,data52_5,data53_0,data53_1,data53_2,data53_3,data53_4,data53_5,data54_0,data54_1,data54_2,data54_3,data54_4,data54_5,data55_0,data55_1,data55_2,data55_3,data55_4,data55_5,data56_0,data56_1,data56_2,data56_3,data56_4,data56_5,data57_0,data57_1,data57_2,data57_3,data57_4,data57_5,data58_0,data58_1,data58_2,data58_3,data58_4,data58_5,data59_0,data59_1,data59_2,data59_3,data59_4,data59_5,data60_0,data60_1,data60_2,data60_3,data60_4,data60_5,data61_0,data61_1,data61_2,data61_3,data61_4,data61_5,data62_0,data62_1,data62_2,data62_3,data62_4,data62_5,data63_0,data63_1,data63_2,data63_3,data63_4,data63_5,result0,result1,result2,result3,result4,result5];
			27 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_SIZE=2,LPM_WIDTHS=1,LPM_PIPELINE=0] [sel0,data0_0,data1_0,result0];
		}
	}
	bypassff.tdf
	{
		bypassff [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=8] []
		{
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6] [d0,d1,d2,d3,d4,d5,q4,q5];
			15 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6] [d0,d1,d2,d3,d4,d5,q0,q1,q2,q3,q4,q5];
			24 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=3] [d0,d1,d2,q0,q1,q2];
		}
	}
	muxlut.tdf
	{
		muxlut [USE_LPM_FOR_AHDL_OPERATORS,SIZE,LEVEL,TOT_LEVELS,LATENCY,REM_LATENCY,LOCAL=0,CASCADE_CHAIN] [altshift.inc,muxlut.inc]
		{
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=16,LEVEL=1,TOT_LEVELS=3,LATENCY=0,LOCAL=0,CASCADE_CHAIN=IGNORE] [select0,select1,select2,select3,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,result];
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=4,LEVEL=0,TOT_LEVELS=3,LATENCY=0,LOCAL=0,CASCADE_CHAIN=IGNORE] [select0,select1,data0,data1,data2,data3,result];
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=4,LEVEL=1,TOT_LEVELS=3,LATENCY=0,LOCAL=1,CASCADE_CHAIN=IGNORE] [select0,select1,data0,data1,data2,data3,result];
			16 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=64,LEVEL=2,TOT_LEVELS=3,LATENCY=0,LOCAL=0,CASCADE_CHAIN=IGNORE] [select0,select1,select2,select3,select4,select5,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,data16,data17,data18,data19,data20,data21,data22,data23,data24,data25,data26,data27,data28,data29,data30,data31,data32,data33,data34,data35,data36,data37,data38,data39,data40,data41,data42,data43,data44,data45,data46,data47,data48,data49,data50,data51,data52,data53,data54,data55,data56,data57,data58,data59,data60,data61,data62,data63,result];
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=4,LEVEL=2,TOT_LEVELS=3,LATENCY=0,LOCAL=1,CASCADE_CHAIN=IGNORE] [select0,select1,data0,data1,data2,data3,result];
			28 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=2,LEVEL=0,TOT_LEVELS=1,LATENCY=0,LOCAL=0,CASCADE_CHAIN=IGNORE] [select0,data0,data1,result];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DECODES,LPM_PIPELINE=0,CASCADE_CHAIN=MANUAL,DEVICE_FAMILY] [aglobal.inc,lpm_constant.inc,lpm_compare.inc,altshift.inc,declut.inc]
		{
			21 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_DECODES=64,LPM_PIPELINE=0,CASCADE_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K] [enable,data0,data1,data2,data3,data4,data5,eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9,eq10,eq11,eq12,eq13,eq14,eq15,eq16,eq17,eq18,eq19,eq20,eq21,eq22,eq23,eq24,eq25,eq26,eq27,eq28,eq29,eq30,eq31,eq32,eq33,eq34,eq35,eq36,eq37,eq38,eq39,eq40,eq41,eq42,eq43,eq44,eq45,eq46,eq47,eq48,eq49,eq50,eq51,eq52,eq53,eq54,eq55,eq56,eq57,eq58,eq59,eq60,eq61,eq62,eq63];
		}
	}
	declut.tdf
	{
		declut [USE_LPM_FOR_AHDL_OPERATORS,width,STAGE,TOT_LEVELS,LATENCY] [bypassff.inc,declut.inc]
		{
			25 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=3,STAGE=1,TOT_LEVELS=2,LATENCY=0] [enable,data0,data1,data2,eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7];
			23 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=6,STAGE=0,TOT_LEVELS=2,LATENCY=0] [enable,data0,data1,data2,data3,data4,data5,eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9,eq10,eq11,eq12,eq13,eq14,eq15,eq16,eq17,eq18,eq19,eq20,eq21,eq22,eq23,eq24,eq25,eq26,eq27,eq28,eq29,eq30,eq31,eq32,eq33,eq34,eq35,eq36,eq37,eq38,eq39,eq40,eq41,eq42,eq43,eq44,eq45,eq46,eq47,eq48,eq49,eq50,eq51,eq52,eq53,eq54,eq55,eq56,eq57,eq58,eq59,eq60,eq61,eq62,eq63];
		}
	}
	mux2.tdf
	{
		mux2 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			26 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,sel];
		}
	}
	counter1.vhd
	{
		counter1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS];
	}
	counter2.vhd
	{
		counter2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			29 [] [];
		}
	}
	compare1.vhd
	{
		compare1 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			43 [] [];
		}
	}
	compare2.vhd
	{
		compare2 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			54 [] [];
		}
	}
	f8count.gdf
	{
		f8count [] []
		{
			76 [] [];
		}
	}
	mux3.tdf
	{
		mux3 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc];
	}
	count3.vhd
	{
		count3 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS];
	}
	count4.tdf
	{
		count4 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc];
	}
	compare.vhd
	{
		compare [] [U1147235.DLS,U7449008.DLS,U2043679.DLS];
	}
	count5.tdf
	{
		count5 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc];
	}
	count_5.vhd
	{
		count_5 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			74 [] [];
		}
	}
	compare16.vhd
	{
		compare16 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			77 [] [];
		}
	}
	mux18.tdf
	{
		mux18 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			78 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,sel];
		}
	}
	compare_del.vhd
	{
		compare_del [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			89 [] [];
		}
	}
	project.gdf
	{
		project [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	project::(0,0):(0): project.gdf
	{
		del::(0,0):(338): del.vhd
		{
			lpm_counter:118:(74,33):(20,lpm_counter_component): lpm_counter.tdf
			{
				lpm_add_sub:119:(298,7):(63,add_sub): lpm_add_sub.tdf
				{
					addcore:120:(212,4):(43,adder): addcore.tdf;
					altshift:121:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
					altshift:8:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
					altshift:8:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
				}
				lpm_constant:122:(316,6):(83,scdw): lpm_constant.tdf;
				cmpconst:123:(951,14):(89): cmpconst.tdf;
			}
		}
		con5::(0,0):(330): con5.vhd
		{
			lpm_constant:85:(67,34):(31,lpm_constant_component): lpm_constant.tdf;
		}
		mux6::(0,0):(329): mux6.tdf
		{
			lpm_mux:108:(51,2):(46,lpm_mux_component): lpm_mux.tdf
			{
				altshift:7:(89,2):(49,external_latency_ffs): altshift.tdf;
				muxlut:28:(182,21):(67): muxlut.tdf;
				muxlut:28:(182,21):(82): muxlut.tdf;
				muxlut:28:(182,21):(97): muxlut.tdf;
				muxlut:28:(182,21):(112): muxlut.tdf;
				muxlut:28:(182,21):(127): muxlut.tdf;
				muxlut:28:(182,21):(142): muxlut.tdf;
			}
		}
		counter123::(0,0):(326): counter123.vhd
		{
			lpm_counter:104:(76,33):(34,lpm_counter_component): lpm_counter.tdf
			{
				lpm_counter:105:(215,3):(69,c2): lpm_counter.tdf
				{
					lpm_constant:40:(238,6):(69,ac): lpm_constant.tdf;
					lpm_constant:40:(242,6):(78,sc): lpm_constant.tdf;
					lpm_add_sub:5:(298,7):(87,add_sub): lpm_add_sub.tdf
					{
						addcore:6:(212,4):(52,adder): addcore.tdf;
						altshift:7:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
						altshift:8:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
						altshift:8:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					}
					lpm_constant:41:(316,6):(116,scdw): lpm_constant.tdf;
					cmpconst:42:(951,14):(125): cmpconst.tdf;
				}
			}
		}
		comp::(0,0):(322): comp.tdf
		{
			lpm_compare:44:(49,2):(34,lpm_compare_component): lpm_compare.tdf
			{
				comptree:45:(292,3):(48,comparator): comptree.tdf
				{
					cmpchain:46:(177,5):(44,cmp_end): cmpchain.tdf
					{
						comptree:47:(140,7):(44,comp): comptree.tdf
						{
							cmpchain:48:(137,7):(44,cmp2): cmpchain.tdf;
							cmpchain:48:(137,7):(57,cmp1): cmpchain.tdf;
							cmpchain:49:(137,7):(70,cmp0): cmpchain.tdf;
							comptree:50:(153,4):(83,sub_comptree): comptree.tdf
							{
								cmpchain:51:(137,7):(38,cmp0): cmpchain.tdf;
								cmpchain:52:(144,5):(51,cmp_end): cmpchain.tdf;
								comptree:53:(153,4):(62,sub_comptree): comptree.tdf
								{
									cmpchain:51:(195,6):(36,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:8:(306,2):(72,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(80,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		compare18::(0,0):(218): compare18.vhd
		{
			lpm_compare:56:(75,33):(46,lpm_compare_component): lpm_compare.tdf
			{
				comptree:57:(292,3):(48,comparator): comptree.tdf
				{
					cmpchain:58:(177,5):(44,cmp_end): cmpchain.tdf
					{
						comptree:59:(140,7):(44,comp): comptree.tdf
						{
							cmpchain:35:(137,7):(44,cmp0): cmpchain.tdf;
							cmpchain:34:(144,5):(61,cmp_end): cmpchain.tdf;
							comptree:33:(163,4):(74,sub_comptree): comptree.tdf
							{
								cmpchain:34:(177,5):(36,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:8:(306,2):(72,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(80,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		counter16::(0,0):(219): counter16.vhd
		{
			lpm_counter:80:(72,33):(33,lpm_counter_component): lpm_counter.tdf
			{
				lpm_add_sub:5:(298,7):(69,add_sub): lpm_add_sub.tdf
				{
					addcore:6:(212,4):(52,adder): addcore.tdf;
					altshift:7:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					altshift:8:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:8:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
				}
				lpm_constant:81:(316,6):(98,scdw): lpm_constant.tdf;
				cmpconst:82:(951,14):(107): cmpconst.tdf;
			}
		}
		counter2::(0,0):(192): counter2.vhd
		{
			lpm_counter:38:(73,33):(33,lpm_counter_component): lpm_counter.tdf
			{
				lpm_counter:39:(215,3):(69,c2): lpm_counter.tdf
				{
					lpm_constant:40:(238,6):(69,ac): lpm_constant.tdf;
					lpm_add_sub:5:(298,7):(78,add_sub): lpm_add_sub.tdf
					{
						addcore:6:(212,4):(52,adder): addcore.tdf;
						altshift:7:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
						altshift:8:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
						altshift:8:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					}
					lpm_constant:41:(316,6):(107,scdw): lpm_constant.tdf;
					cmpconst:42:(951,14):(116): cmpconst.tdf;
				}
			}
		}
		counter4::(0,0):(190): counter4.vhd
		{
			lpm_counter:86:(74,33):(39,lpm_counter_component): lpm_counter.tdf
			{
				lpm_add_sub:61:(298,7):(71,add_sub): lpm_add_sub.tdf
				{
					addcore:62:(212,4):(55,adder): addcore.tdf;
					altshift:63:(222,2):(83,result_ext_latency_ffs): altshift.tdf;
					altshift:8:(224,2):(103,carry_ext_latency_ffs): altshift.tdf;
					altshift:8:(226,2):(111,oflow_ext_latency_ffs): altshift.tdf;
				}
				lpm_constant:87:(316,6):(103,scdw): lpm_constant.tdf;
				cmpconst:88:(951,14):(113): cmpconst.tdf;
			}
		}
		counter6::(0,0):(178): counter6.vhd
		{
			lpm_counter:70:(73,33):(9,lpm_counter_component): lpm_counter.tdf
			{
				lpm_add_sub:71:(298,7):(59,add_sub): lpm_add_sub.tdf
				{
					addcore:72:(212,4):(37,adder): addcore.tdf;
					altshift:8:(222,2):(47,result_ext_latency_ffs): altshift.tdf;
					altshift:8:(224,2):(55,carry_ext_latency_ffs): altshift.tdf;
					altshift:8:(226,2):(63,oflow_ext_latency_ffs): altshift.tdf;
				}
				lpm_constant:73:(318,6):(73,scdw): lpm_constant.tdf;
			}
		}
		counter6::(0,0):(177): counter6.vhd
		{
			lpm_counter:70:(73,33):(9,lpm_counter_component): lpm_counter.tdf
			{
				lpm_add_sub:71:(298,7):(59,add_sub): lpm_add_sub.tdf
				{
					addcore:72:(212,4):(37,adder): addcore.tdf;
					altshift:8:(222,2):(47,result_ext_latency_ffs): altshift.tdf;
					altshift:8:(224,2):(55,carry_ext_latency_ffs): altshift.tdf;
					altshift:8:(226,2):(63,oflow_ext_latency_ffs): altshift.tdf;
				}
				lpm_constant:73:(318,6):(73,scdw): lpm_constant.tdf;
			}
		}
		compare5:68:(0,0):(80): compare5.vhd
		{
			lpm_compare:124:(75,33):(53,lpm_compare_component): lpm_compare.tdf
			{
				comptree:125:(292,3):(50,comparator): comptree.tdf
				{
					cmpchain:126:(177,5):(46,cmp_end): cmpchain.tdf
					{
						comptree:127:(140,7):(46,comp): comptree.tdf
						{
							cmpchain:35:(137,7):(46,cmp0): cmpchain.tdf;
							cmpchain:32:(144,5):(63,cmp_end): cmpchain.tdf;
							comptree:33:(163,4):(78,sub_comptree): comptree.tdf
							{
								cmpchain:34:(177,5):(36,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:8:(306,2):(76,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(84,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		compare3:55:(0,0):(74): compare3.vhd
		{
			lpm_compare:124:(75,33):(53,lpm_compare_component): lpm_compare.tdf
			{
				comptree:125:(292,3):(50,comparator): comptree.tdf
				{
					cmpchain:126:(177,5):(46,cmp_end): cmpchain.tdf
					{
						comptree:127:(140,7):(46,comp): comptree.tdf
						{
							cmpchain:35:(137,7):(46,cmp0): cmpchain.tdf;
							cmpchain:32:(144,5):(63,cmp_end): cmpchain.tdf;
							comptree:33:(163,4):(78,sub_comptree): comptree.tdf
							{
								cmpchain:34:(177,5):(36,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:8:(306,2):(76,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(84,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		compare2:54:(0,0):(55): compare2.vhd
		{
			lpm_compare:67:(75,33):(46,lpm_compare_component): lpm_compare.tdf
			{
				comptree:45:(292,3):(48,comparator): comptree.tdf
				{
					cmpchain:46:(177,5):(44,cmp_end): cmpchain.tdf
					{
						comptree:47:(140,7):(44,comp): comptree.tdf
						{
							cmpchain:48:(137,7):(44,cmp2): cmpchain.tdf;
							cmpchain:48:(137,7):(57,cmp1): cmpchain.tdf;
							cmpchain:49:(137,7):(70,cmp0): cmpchain.tdf;
							comptree:50:(153,4):(83,sub_comptree): comptree.tdf
							{
								cmpchain:51:(137,7):(38,cmp0): cmpchain.tdf;
								cmpchain:52:(144,5):(51,cmp_end): cmpchain.tdf;
								comptree:53:(153,4):(62,sub_comptree): comptree.tdf
								{
									cmpchain:51:(195,6):(36,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:8:(306,2):(72,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(80,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		compare1:43:(0,0):(52): compare1.vhd
		{
			lpm_compare:44:(75,33):(46,lpm_compare_component): lpm_compare.tdf
			{
				comptree:45:(292,3):(48,comparator): comptree.tdf
				{
					cmpchain:46:(177,5):(44,cmp_end): cmpchain.tdf
					{
						comptree:47:(140,7):(44,comp): comptree.tdf
						{
							cmpchain:48:(137,7):(44,cmp2): cmpchain.tdf;
							cmpchain:48:(137,7):(57,cmp1): cmpchain.tdf;
							cmpchain:49:(137,7):(70,cmp0): cmpchain.tdf;
							comptree:50:(153,4):(83,sub_comptree): comptree.tdf
							{
								cmpchain:51:(137,7):(38,cmp0): cmpchain.tdf;
								cmpchain:52:(144,5):(51,cmp_end): cmpchain.tdf;
								comptree:53:(153,4):(62,sub_comptree): comptree.tdf
								{
									cmpchain:51:(195,6):(36,gt_cmp_end): cmpchain.tdf;
								}
							}
						}
					}
				}
				altshift:8:(306,2):(72,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(80,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		mux2:26:(0,0):(46): mux2.tdf
		{
			lpm_mux:27:(51,2):(31,lpm_mux_component): lpm_mux.tdf
			{
				altshift:8:(89,2):(34,external_latency_ffs): altshift.tdf;
				muxlut:28:(182,21):(42): muxlut.tdf;
			}
		}
		lpm_ram_dp:11:(0,0):(14): lpm_ram_dp.tdf
		{
			altdpram:12:(149,7):(57,sram): altdpram.tdf
			{
				lpm_mux:13:(227,4):(58,mux): lpm_mux.tdf
				{
					bypassff:14:(83,17):(426,sel_latency_ff1): bypassff.tdf;
					bypassff:15:(83,17):(443,sel_latency_ff0): bypassff.tdf;
					altshift:7:(89,2):(460,external_latency_ffs): altshift.tdf;
					muxlut:16:(182,21):(478): muxlut.tdf
					{
						muxlut:17:(209,27):(104): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(137): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(170): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(203): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:20:(232,21):(236): muxlut.tdf;
					}
					muxlut:16:(182,21):(560): muxlut.tdf
					{
						muxlut:17:(209,27):(104): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(137): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(170): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(203): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:20:(232,21):(236): muxlut.tdf;
					}
					muxlut:16:(182,21):(642): muxlut.tdf
					{
						muxlut:17:(209,27):(104): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(137): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(170): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(203): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:20:(232,21):(236): muxlut.tdf;
					}
					muxlut:16:(182,21):(724): muxlut.tdf
					{
						muxlut:17:(209,27):(104): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(137): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(170): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(203): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:20:(232,21):(236): muxlut.tdf;
					}
					muxlut:16:(182,21):(806): muxlut.tdf
					{
						muxlut:17:(209,27):(104): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(137): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(170): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(203): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:20:(232,21):(236): muxlut.tdf;
					}
					muxlut:16:(182,21):(888): muxlut.tdf
					{
						muxlut:17:(209,27):(104): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(137): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(170): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:17:(209,27):(203): muxlut.tdf
						{
							muxlut:18:(209,27):(54): muxlut.tdf;
							muxlut:18:(209,27):(73): muxlut.tdf;
							muxlut:18:(209,27):(92): muxlut.tdf;
							muxlut:18:(209,27):(111): muxlut.tdf;
							muxlut:19:(232,21):(130): muxlut.tdf;
						}
						muxlut:20:(232,21):(236): muxlut.tdf;
					}
				}
				lpm_decode:21:(230,4):(461,wdecoder): lpm_decode.tdf
				{
					altshift:22:(76,2):(101,external_latency_ffs): altshift.tdf;
					declut:23:(95,5):(235,decoder): declut.tdf
					{
						bypassff:24:(59,3):(104,data_latency_ffs): bypassff.tdf;
						declut:25:(67,14):(115,sub_decoder7): declut.tdf;
						declut:25:(67,14):(138,sub_decoder6): declut.tdf;
						declut:25:(67,14):(161,sub_decoder5): declut.tdf;
						declut:25:(67,14):(184,sub_decoder4): declut.tdf;
						declut:25:(67,14):(207,sub_decoder3): declut.tdf;
						declut:25:(67,14):(230,sub_decoder2): declut.tdf;
						declut:25:(67,14):(253,sub_decoder1): declut.tdf;
						declut:25:(67,14):(276,sub_decoder0): declut.tdf;
					}
				}
			}
		}
		lpm_counter:4:(0,0):(13): lpm_counter.tdf
		{
			lpm_add_sub:5:(298,7):(69,add_sub): lpm_add_sub.tdf
			{
				addcore:6:(212,4):(52,adder): addcore.tdf;
				altshift:7:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
				altshift:8:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
				altshift:8:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_constant:9:(316,6):(98,scdw): lpm_constant.tdf;
			cmpconst:10:(951,14):(107): cmpconst.tdf;
		}
		lpm_constant:2:(0,0):(61): lpm_constant.tdf;
		lpm_shiftreg:1:(0,0):(1): lpm_shiftreg.tdf
		{
			lpm_constant:2:(65,3):(52,ac): lpm_constant.tdf;
			lpm_constant:3:(68,3):(63,sc): lpm_constant.tdf;
		}
		count_5::(0,0):(148): count_5.vhd
		{
			lpm_counter:75:(75,33):(46,lpm_counter_component): lpm_counter.tdf
			{
				f8count:76:(224,9):(73,p8c0): f8count.gdf;
			}
		}
		compare16::(0,0):(150): compare16.vhd
		{
			lpm_compare:56:(75,33):(46,lpm_compare_component): lpm_compare.tdf
			{
				comptree:57:(292,3):(48,comparator): comptree.tdf
				{
					cmpchain:58:(177,5):(44,cmp_end): cmpchain.tdf
					{
						comptree:59:(140,7):(44,comp): comptree.tdf
						{
							cmpchain:35:(137,7):(44,cmp0): cmpchain.tdf;
							cmpchain:34:(144,5):(61,cmp_end): cmpchain.tdf;
							comptree:33:(163,4):(74,sub_comptree): comptree.tdf
							{
								cmpchain:34:(177,5):(36,cmp_end): cmpchain.tdf;
							}
						}
					}
				}
				altshift:8:(306,2):(72,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(80,agb_ext_lat_ffs): altshift.tdf;
			}
		}
		mux18::(0,0):(169): mux18.tdf
		{
			lpm_mux:27:(51,2):(31,lpm_mux_component): lpm_mux.tdf
			{
				altshift:8:(89,2):(34,external_latency_ffs): altshift.tdf;
				muxlut:28:(182,21):(42): muxlut.tdf;
			}
		}
		compare_del::(0,0):(349): compare_del.vhd
		{
			lpm_compare:90:(75,33):(25,lpm_compare_component): lpm_compare.tdf
			{
				comptree:91:(292,3):(42,comparator): comptree.tdf
				{
					cmpchain:32:(177,5):(38,cmp_end): cmpchain.tdf;
				}
				altshift:8:(306,2):(60,aeb_ext_lat_ffs): altshift.tdf;
				altshift:8:(307,2):(68,agb_ext_lat_ffs): altshift.tdf;
			}
		}
	}
}
